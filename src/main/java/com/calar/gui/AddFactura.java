/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.calar.gui;

import com.calar.logic.LineaFactura;
import com.calar.logic.Product;
import com.calar.logic.User;
import com.calar.logic.Validations;
import com.calar.persistence.ConnectionDB;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author ivanfriasgil
 */
public class AddFactura extends javax.swing.JFrame {
    
    private User user;
    private Product product;
    private int id_factura;
    private float precio_acumulado = 0;
    
    /**
     * Creates new form AddProduct
     */
    public AddFactura(User user, int id_factura) {
        this.user = user;
        this.id_factura = id_factura;
        initComponents();
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        nombre = new javax.swing.JLabel();
        nombreProductoField = new javax.swing.JTextField();
        precio = new javax.swing.JLabel();
        cantidadProductoField = new javax.swing.JTextField();
        add = new javax.swing.JButton();
        salir = new javax.swing.JButton();
        showProducts = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        nombre.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        nombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombre.setText("Nombre producto");

        nombreProductoField.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        nombreProductoField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        precio.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        precio.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        precio.setText("Cantidad");

        cantidadProductoField.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        cantidadProductoField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        add.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        add.setText("Añadir");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        salir.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        salir.setText("Salir");
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });

        showProducts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showProductsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(precio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreProductoField, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .addComponent(add, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .addComponent(cantidadProductoField, javax.swing.GroupLayout.DEFAULT_SIZE, 332, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelLayout.createSequentialGroup()
                        .addGap(84, 84, 84)
                        .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(showProducts, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(nombre)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(showProducts, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreProductoField, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(precio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cantidadProductoField, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(salir, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
        // PROGRAMAR FUNCIONALIDAD PARA DECIDIR SI GUARDAR O NO LA FACTURA
        Object[] opciones = {"Sí", "No", "Cancelar"};
        int opcion = JOptionPane.showOptionDialog(null, "¿Quiere guardar la factura?", "Factura", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE, null, opciones, opciones[0]);
        if (opcion == JOptionPane.YES_OPTION) {
            // Actualizamos precio final de la factura.
            System.out.println("Factura guardada");
            int id_factura = ConnectionDB.getIdLastFacture();
            ConnectionDB.updatePrecioFactura(precio_acumulado, id_factura);
            
            this.dispose();
        } else if (opcion == JOptionPane.NO_OPTION) {
            // Eliminar la factura que acabamos de crear
            ConnectionDB.dropLastFacture();
            System.out.println("Ha salido de dropFacture");
            this.dispose();
        } else {
            System.out.println("El usuario seleccionó Cancelar.");
        }
    }//GEN-LAST:event_salirActionPerformed

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        // Creamos la logica para añadir una linea_factura.
        String nombreProducto = nombreProductoField.getText();
        int cantidadProducto = Integer.parseInt(cantidadProductoField.getText());
        
        if (cantidadProducto > 0){
            System.out.println("Cantidad producto" + cantidadProducto);
            // Traemos el precio del producto.
            float precioProducto = ConnectionDB.getPriceProduct(nombreProducto, user.getEmail());
            System.out.println("Precio producto" + precioProducto);

            // Calculamos el total multiplicando el precio x cantidad
            float precioTotal = cantidadProducto * precioProducto;
            System.out.println("Cantidad producto" + precioTotal);

            // Comprobamos si existe el producto para poder meterlo en la linea de factura.
            
            boolean existProduct = ConnectionDB.existProduct(nombreProducto, user.getEmail());
            
            if(existProduct){
                precio_acumulado += precioTotal;
                System.out.println(precio_acumulado);

                LineaFactura lin = new LineaFactura(id_factura, nombreProducto, cantidadProducto, precioTotal);
                // Insertamos la linea de factura en la bbdd.
                ConnectionDB.insertarLineaFactura(lin, user.getEmail());
                // Modificamos existencias.
                ConnectionDB.modificarExistencias(nombreProducto, cantidadProducto);
            }
        } else {
            JOptionPane.showMessageDialog(null, "La cantidad tiene que ser mayor que 0");
        }
        
    }//GEN-LAST:event_addActionPerformed

    private void showProductsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showProductsActionPerformed
        // TODO add your handling code here:
        ShowProducts prod = new ShowProducts(user, this);
            prod.setVisible(true);
            prod.setLocationRelativeTo(null);
    }//GEN-LAST:event_showProductsActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JTextField cantidadProductoField;
    private javax.swing.JLabel nombre;
    private javax.swing.JTextField nombreProductoField;
    private javax.swing.JPanel panel;
    private javax.swing.JLabel precio;
    private javax.swing.JButton salir;
    private javax.swing.JButton showProducts;
    // End of variables declaration//GEN-END:variables
}
